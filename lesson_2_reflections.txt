What happens when you initialize a repository? Why do you need to do it?

Git creates a .git file which contains meta data that tracks the changes made in the repository. To create an actual repository. A directory containing files is not repository without the .git file. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is a temporary holding area for files that will be commited. The repository is the directory containing the original files that are being changed. A working directory just contains file, it does not have the .git file.

How can you use the staging area to make sure you have one commit per logical
change?
Add all the files with logical changes to the staging area before making a commit

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

   In situations when I might want to experiment with an idea with affecting the files in the original project.

How do the diagrams help you visualize the branch structure?

Diagrams give an overall visualization of the commit and branch history. It allows me to track changes visually

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
